version: '3.8'

services:
  claude-code-ui:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-3002}:${PORT:-3002}"
    env_file:
      - .env
    environment:
      # System configuration
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3002}
      - HOME=/home/claude
      - TZ=${TZ:-UTC}
      
      # Claude AI configuration
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_API_URL=${ANTHROPIC_API_URL}
      - CLAUDE_DEFAULT_MODEL=${CLAUDE_DEFAULT_MODEL}
      - CLAUDE_PERMISSION_MODE=${CLAUDE_PERMISSION_MODE}
      - CLAUDE_ADDITIONAL_DIRS=${CLAUDE_ADDITIONAL_DIRS}
      - CLAUDE_SYSTEM_PROMPT=${CLAUDE_SYSTEM_PROMPT}
      - CLAUDE_SKIP_PERMISSIONS=${CLAUDE_SKIP_PERMISSIONS}
      
      # GitHub integration
      - GITHUB_USERNAME=${GITHUB_USERNAME}
      - GITHUB_EMAIL=${GITHUB_EMAIL}
      - GITHUB_PAT=${GITHUB_PAT}
      - GITHUB_API_URL=${GITHUB_API_URL}
      - GITHUB_AUTO_CONFIG=${GITHUB_AUTO_CONFIG:-true}
      
      # Git configuration
      - GIT_USER_NAME=${GIT_USER_NAME}
      - GIT_USER_EMAIL=${GIT_USER_EMAIL}
      - GIT_CREDENTIAL_HELPER=${GIT_CREDENTIAL_HELPER:-store}
      
      # Security & Authentication
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      
      # OpenAI integration (for transcription)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Project discovery (Windows-specific)
      - BASE_PROJECTS_FOLDER=${BASE_PROJECTS_FOLDER:-/workspace}
      
      # Debugging
      - DEBUG=${DEBUG:-false}
      - MCP_DEBUG=${MCP_DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Performance settings
      - FILE_WATCHER_DEBOUNCE=${FILE_WATCHER_DEBOUNCE:-300}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - SESSION_TIMEOUT=${SESSION_TIMEOUT:-24}
      
      # Backup settings
      - BACKUP_INTERVAL=${BACKUP_INTERVAL:-24}
      - BACKUP_MAX_COUNT=${BACKUP_MAX_COUNT:-7}
      - BACKUP_PATH=${BACKUP_PATH:-/app/backups}
      
    volumes:
      # Mount the Claude projects directory for persistence
      - claude_projects:/home/claude/.claude/projects
      # Mount the database directory for persistence
      - claude_database:/app/database
      # Mount your Windows X: drive repositories (customize this path)
      - /x/Repos:/workspace:ro
      # Mount backup directory if configured
      - claude_backups:/app/backups
      # Optional: Mount specific project directories individually
      # - /x/Repos/my-project:/workspace/my-project:ro
      # - /x/Repos/another-project:/workspace/another-project:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${PORT:-3002}/api/config', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  watchtower:
    image: containrrr/watchtower:latest
    container_name: claude-ui-watchtower
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - WATCHTOWER_SCHEDULE=${WATCHTOWER_SCHEDULE:-0 0 3 * * *}
      - WATCHTOWER_POLL_INTERVAL=${WATCHTOWER_POLL_INTERVAL:-0}
      - WATCHTOWER_CLEANUP=${WATCHTOWER_CLEANUP:-true}
      - WATCHTOWER_INCLUDE_STOPPED=${WATCHTOWER_INCLUDE_STOPPED:-false}
      - WATCHTOWER_RUN_ONCE=${WATCHTOWER_RUN_ONCE:-false}
      - WATCHTOWER_DEBUG=${WATCHTOWER_DEBUG:-false}
      - WATCHTOWER_SCOPE=${WATCHTOWER_SCOPE}
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATIONS}
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}
      - WATCHTOWER_NOTIFICATION_TEMPLATE=${WATCHTOWER_NOTIFICATION_TEMPLATE}
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL}
      - WATCHTOWER_NOTIFICATION_DISCORD_HOOK_URL=${WATCHTOWER_NOTIFICATION_DISCORD_HOOK_URL}
      - WATCHTOWER_NOTIFICATION_MSTEAMS_HOOK_URL=${WATCHTOWER_NOTIFICATION_MSTEAMS_HOOK_URL}
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${WATCHTOWER_NOTIFICATION_EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_NOTIFICATION_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT:-587}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD}
      - WATCHTOWER_TIMEOUT=${WATCHTOWER_TIMEOUT:-10}
      - WATCHTOWER_ROLLING_RESTART=${WATCHTOWER_ROLLING_RESTART:-false}
      - TZ=${TZ:-UTC}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    profiles:
      - watchtower
    command: >
      sh -c "
      if [ \"$${WATCHTOWER_ENABLE:-true}\" = \"true\" ]; then
        /watchtower
      else
        echo 'Watchtower disabled via WATCHTOWER_ENABLE=false'
        sleep infinity
      fi
      "

volumes:
  claude_projects:
    driver: local
  claude_database:
    driver: local
  claude_backups:
    driver: local